---
layout: post
title: 리팩터링 - 양방향 관계를 단일방향으로 변경하기
description: 소프트웨어 설계전략 스터디
date:   2018-08-25 00:55:00 +0530
categories: code
tags: [ software development ]
author: easywaldo
---

<p>
소프트웨어가 점점 복잡해져감에 따라 요구사항은 늘어나게 되고
요구사항들에 대응하는 기능을 구현하는 클래스들도 늘어나게 됩니다.

하지만 중요한 건 클래스들간에 발생하는 관계들도 점점 복잡해진다는 것 입니다.
예를들어 고객과 주문 클래스가 아래와 같이 존재한다고 가정을 해봅시다.

</p>

```
고객 클래스
아이디
최근주문번호


주문 클래스
주문번호
고객 아이디
```


<p>
고객 클래스는 주문 클래스의 관계에 의존하는 최근주문번호가 존재합니다.
주문 클래스는 고객 클래스의 관계에 의존하는 고객아이디가 존재합니다.
</p>

<p>
너무 극단적인 예시라고 생각은 되긴 합니다만..
주문번호에 대한 포맷이 변경이 되는 경우라면 주문 클래스의 변화와 함께 고객 클래스의 최근주문번호도 마찬가지로 변경이 필요합니다.
주문번호의 포맷 변경으로 인해 고객 클래스와 주문 클래스 모두 변경이 되는 사례라고 할 수 있겠습니다.
</p>

<p>
따라서 고객 클래스에서는 최근주문번호를 삭제하여 고객클래스가 주문 클래스에 의존하지 않도록 관계설정을 변경해주어야 합니다.
양방향 관계가 무조건 잘못이라고 볼 수는 없지만
실제로 양방향 관계에서 어느 한 클래스가 다른 클래스의 기능을 사용하지 않음에도 관계가 설정이 되어 있다면
이를 제거해야 함을 리팩토링 관련한 문서들에서 확인할 수 있습니다.
</p>

<script id="dsq-count-scr" src="//easywaldo.disqus.com/count.js" async></script>


